commit;
-- 모든 사용자 오브젝트 삭제 구문
SELECT 'drop '
  ||object_type
  ||' '
  || object_name
  || DECODE(OBJECT_TYPE,'TABLE',' CASCADE CONSTRAINTS;',';')
FROM user_objects;
-- 1. 회원 프로필 테이블
CREATE SEQUENCE SEQ_IMGNO;
CREATE TABLE PROFILE_IMG (
    IMGNO NUMBER PRIMARY KEY,
    ORIGINALFILENAME VARCHAR2(300) DEFAULT 'default.png' NOT NULL,
    RENAMEDFILENAME VARCHAR2(300) DEFAULT 'default.png' NOT NULL,
    IMGPATH VARCHAR2(300) DEFAULT 'default.png' NOT NULL,
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N'))
);
INSERT INTO PROFILE_IMG VALUES (SEQ_IMGNO.NEXTVAL, 'default.png', 'default.png', 'default.png', DEFAULT);
-- 코멘트
COMMENT ON COLUMN "PROFILE_IMG"."IMGNO" IS '프로필 이미지 번호';
COMMENT ON COLUMN "PROFILE_IMG"."ORIGINALFILENAME" IS '업로드한 첨부파일명';
COMMENT ON COLUMN "PROFILE_IMG"."RENAMEDFILENAME" IS '서버에 저장된 첨부파일명';
COMMENT ON COLUMN "PROFILE_IMG"."IMGPATH" IS '이미지 파일 경로';
COMMENT ON COLUMN "PROFILE_IMG"."STATUS" IS '사용여부';

-- 2. 회원 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_MNO;
-- 테이블
CREATE TABLE MEMBER(
    MNO NUMBER PRIMARY KEY,
    USERID VARCHAR2(45) NOT NULL,
    PASSWORD VARCHAR2(200) NOT NULL,
    EMAIL VARCHAR2(300) NOT NULL,
    NICKNAME VARCHAR2(45) NOT NULL,
    MCONDITION VARCHAR2(1) DEFAULT 'Y' CHECK (MCONDITION IN ('Y', 'N')),
    MDATE DATE DEFAULT SYSDATE,
    MPROFILE NUMBER DEFAULT 1,
    FOREIGN KEY (MPROFILE) REFERENCES PROFILE_IMG(IMGNO) ON DELETE CASCADE
);
INSERT INTO MEMBER VALUES
(SEQ_MNO.NEXTVAL, 'admin', 'admin!1', 'admin@gmail.com', '관리자', DEFAULT, DEFAULT, DEFAULT);
-- 코맨트
COMMENT ON COLUMN "MEMBER"."MNO" IS '회원 번호';
COMMENT ON COLUMN "MEMBER"."USERID" IS '회원 아이디';
COMMENT ON COLUMN "MEMBER"."PASSWORD" IS '회원 비밀번호';
COMMENT ON COLUMN "MEMBER"."EMAIL" IS '회원 이메일';
COMMENT ON COLUMN "MEMBER"."NICKNAME" IS '회원 닉네임(이름)';
COMMENT ON COLUMN "MEMBER"."MCONDITION" IS '회원 상태';
COMMENT ON COLUMN "MEMBER"."MDATE" IS '회원 가입일';
COMMENT ON COLUMN "MEMBER"."MPROFILE" IS '회원 프로필';

-- 3. 프로젝트 단계 테이블
-- 테이블
CREATE TABLE PROJECT_LEVEL(
    LPNO NUMBER NOT NULL,
    LNO NUMBER NOT NULL,
    LNAME VARCHAR2(30) NOT NULL,
    LCHECK VARCHAR2(1) DEFAULT 'N' CHECK (LCHECK IN('Y', 'N'))
);
-- 코맨트
COMMENT ON COLUMN "PROJECT_LEVEL"."LPNO" IS '프로젝트 번호';
COMMENT ON COLUMN "PROJECT_LEVEL"."LNO" IS '프로젝트 단계 번호';
COMMENT ON COLUMN "PROJECT_LEVEL"."LNAME" IS '프로젝트 단계별 이름';
COMMENT ON COLUMN "PROJECT_LEVEL"."LCHECK" IS '프로젝트 단계 체크여부';

-- 4. 프로젝트 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_PNO;
-- 테이블
CREATE TABLE PROJECT(
    PNO NUMBER PRIMARY KEY,
    PTITLE VARCHAR2(100) NOT NULL,
    PSUMMARY VARCHAR2(300) NOT NULL,
    PLEVEL NUMBER DEFAULT 0 CHECK(PLEVEL IN(0,1,2,3,4,5)),
    PLEVELCK NUMBER DEFAULT 0 CHECK(PLEVELCK IN(0,1,2,3,4,5)),
    PMNO NUMBER NOT NULL,
    FOREIGN KEY (PMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "PROJECT"."PNO" IS '프로젝트 번호';
COMMENT ON COLUMN "PROJECT"."PTITLE" IS '프로젝트 이름';
COMMENT ON COLUMN "PROJECT"."PSUMMARY" IS '프로젝트 개요';
COMMENT ON COLUMN "PROJECT"."PLEVEL" IS '프로젝트 단계';
COMMENT ON COLUMN "PROJECT"."PLEVELCK" IS '프로젝트 단계 체크여부';
COMMENT ON COLUMN "PROJECT"."PMNO" IS '프로젝트 팀장 번호';
-- 5. 개인일정 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_MCNO;
-- 테이블
CREATE TABLE MYCALENDAR(
    MCNO NUMBER PRIMARY KEY,
    MCSTART DATE NOT NULL,
    MCEND DATE NOT NULL,
    MCCONTENT VARCHAR2(300) NOT NULL,
    MCCONDITION VARCHAR2(1) DEFAULT 'Y' CHECK (MCCONDITION IN('Y', 'N')),
    MCMNO NUMBER NOT NULL,
    FOREIGN KEY (MCMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "MYCALENDAR"."MCNO" IS '개인일정 번호';
COMMENT ON COLUMN "MYCALENDAR"."MCSTART" IS '개인일정 시작일';
COMMENT ON COLUMN "MYCALENDAR"."MCEND" IS '개인일정 종료일';
COMMENT ON COLUMN "MYCALENDAR"."MCCONTENT" IS '개인일정 내용';
COMMENT ON COLUMN "MYCALENDAR"."MCCONDITION" IS '개인일정 상태';
COMMENT ON COLUMN "MYCALENDAR"."MCMNO" IS '개인일정 회원 번호';

-- 6. 1:1채팅 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_CMMNO;
-- 테이블
CREATE TABLE CHAT_MTM(
    CHNO NUMBER PRIMARY KEY,
    CHCONTENT VARCHAR2(1000) NOT NULL,
    CHDATE DATE DEFAULT SYSDATE,
    CHCONDITION VARCHAR2(1) DEFAULT 'Y' CHECK (CHCONDITION IN('Y', 'N')),
    CHWRITER NUMBER NOT NULL,
    CHREADER NUMBER NOT NULL,
    CHREADERS VARCHAR(1000),
    CHPNO NUMBER NOT NULL,
    FOREIGN KEY (CHWRITER) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (CHREADER) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (CHPNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "CHAT_MTM"."CHNO" IS '1:1채팅 번호';
COMMENT ON COLUMN "CHAT_MTM"."CHCONTENT" IS '1:1채팅 내용';
COMMENT ON COLUMN "CHAT_MTM"."CHDATE" IS '1:1채팅 작성일';
COMMENT ON COLUMN "CHAT_MTM"."CHCONDITION" IS '1:1채팅 상태';
COMMENT ON COLUMN "CHAT_MTM"."CHWRITER" IS '1:1채팅 송신자';
COMMENT ON COLUMN "CHAT_MTM"."CHREADER" IS '1:1채팅 수신자';
COMMENT ON COLUMN "CHAT_MTM"."CHPNO" IS '1:1채팅 프로젝트 번호';
COMMENT ON COLUMN "CHAT_MTM"."CHREADERS" IS '1:1채팅 읽은 회원';

-- 7. 게시글 타입 참조 테이블
-- 테이블
CREATE TABLE BOARD_TYPE(
    BTYPE NUMBER PRIMARY KEY,
    BTCONTENT VARCHAR2(30) NOT NULL
);
-- 코맨트
COMMENT ON COLUMN "BOARD_TYPE"."BTYPE" IS '게시글 타입 번호';
COMMENT ON COLUMN "BOARD_TYPE"."BTCONTENT" IS '게시글 타입 내용';
-- 데이터 입력
INSERT INTO BOARD_TYPE VALUES(1, '공지사항');
INSERT INTO BOARD_TYPE VALUES(2, '고객센터');
INSERT INTO BOARD_TYPE VALUES(3, '업무');
INSERT INTO BOARD_TYPE VALUES(4, '일정');

-- 8. 게시글 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_BNO;
-- 테이블
CREATE TABLE BOARD(
    BNO NUMBER PRIMARY KEY,
    BTITLE VARCHAR2(300) NOT NULL,
    BCONTENT VARCHAR2(4000) NOT NULL,
    BCONDITION VARCHAR2(1) DEFAULT 'Y' CHECK(BCONDITION IN('Y', 'N')) NOT NULL,
    BDATE DATE DEFAULT SYSDATE NOT NULL,
    BMNO NUMBER NOT NULL,
    BTYPE NUMBER NOT NULL,
    BPNO NUMBER,
    FOREIGN KEY (BMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (BTYPE) REFERENCES BOARD_TYPE(BTYPE) ON DELETE CASCADE,
    FOREIGN KEY (BPNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "BOARD"."BNO" IS '게시글 번호';
COMMENT ON COLUMN "BOARD"."BTITLE" IS '게시글 제목';
COMMENT ON COLUMN "BOARD"."BCONTENT" IS '게시글 내용';
COMMENT ON COLUMN "BOARD"."BCONDITION" IS '게시글 상태';
COMMENT ON COLUMN "BOARD"."BDATE" IS '게시글 작성일';
COMMENT ON COLUMN "BOARD"."BMNO" IS '게시글 작성자';
COMMENT ON COLUMN "BOARD"."BTYPE" IS '게시글 타입';
COMMENT ON COLUMN "BOARD"."BPNO" IS '게시글 프로젝트 번호';

-- 9. 게시글 담아두기 테이블
-- 테이블
CREATE TABLE BOARD_KEEP(
    BKMNO NUMBER NOT NULL,
    BKBNO NUMBER NOT NULL,
    PRIMARY KEY (BKMNO, BKBNO),
    FOREIGN KEY (BKMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (BKBNO) REFERENCES BOARD(BNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "BOARD_KEEP"."BKMNO" IS '게시글 담아두기 회원 번호';
COMMENT ON COLUMN "BOARD_KEEP"."BKBNO" IS '게시글 담아두기 게시글 번호';

-- 10. 메모 테이블
-- 테이블
CREATE TABLE MEMO(
    MMPNO NUMBER NOT NULL,
    MMMNO NUMBER NOT NULL,
    MMCONTENT VARCHAR2(1000),
    PRIMARY KEY (MMPNO, MMMNO)
);
-- 코맨트
COMMENT ON COLUMN "MEMO"."MMPNO" IS '메모 프로젝트 번호';
COMMENT ON COLUMN "MEMO"."MMMNO" IS '메모 회원 번호';
COMMENT ON COLUMN "MEMO"."MMCONTENT" IS '메모 내용';

-- 11. 댓글 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_BCNO;
-- 테이블
CREATE TABLE BOARD_COMMENT(
    BCNO NUMBER PRIMARY KEY,
    BCCONTENT VARCHAR2(1000) NOT NULL,
    BCBNO NUMBER NOT NULL,
    BCMNO NUMBER NOT NULL,
    FOREIGN KEY (BCBNO) REFERENCES BOARD(BNO) ON DELETE CASCADE,
    FOREIGN KEY (BCMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "BOARD_COMMENT"."BCNO" IS '댓글 번호';
COMMENT ON COLUMN "BOARD_COMMENT"."BCCONTENT" IS '댓글 내용';
COMMENT ON COLUMN "BOARD_COMMENT"."BCBNO" IS '댓글 게시글 번호';
COMMENT ON COLUMN "BOARD_COMMENT"."BCMNO" IS '댓글 작성자';

-- 12. 업무단계 참조 테이블  ----- 데이터 수정요망
-- 테이블
CREATE TABLE TASK_LEVEL(
    TLLEVEL NUMBER PRIMARY KEY,
    TLCONTENT VARCHAR2(30) NOT NULL
);
-- 코맨트
COMMENT ON COLUMN "TASK_LEVEL"."TLLEVEL" IS '업무단계 번호';
COMMENT ON COLUMN "TASK_LEVEL"."TLCONTENT" IS '업무단계 내용';
-- 데이터 입력
INSERT INTO TASK_LEVEL VALUES(1, '요청');
INSERT INTO TASK_LEVEL VALUES(2, '진행');
INSERT INTO TASK_LEVEL VALUES(3, '피드백');
INSERT INTO TASK_LEVEL VALUES(4, '완료');
INSERT INTO TASK_LEVEL VALUES(5, '보류');
INSERT INTO TASK_LEVEL VALUES (6, '일정');

-- 13. 우선순위 참조 테이블
-- 테이블
CREATE TABLE TASK_PRIORITY(
    TPPRIORITY NUMBER PRIMARY KEY,
    TPCONTENT VARCHAR2(30) NOT NULL
);
-- 코맨트
COMMENT ON COLUMN "TASK_PRIORITY"."TPPRIORITY" IS '우선순위 번호';
COMMENT ON COLUMN "TASK_PRIORITY"."TPCONTENT" IS '우선순위 내용';
-- 데이터 입력
INSERT INTO TASK_PRIORITY VALUES(1, '낮음');
INSERT INTO TASK_PRIORITY VALUES(2, '보통');
INSERT INTO TASK_PRIORITY VALUES(3, '높음');
INSERT INTO TASK_PRIORITY VALUES(4, '긴급');

-- 14. 업무 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_TNO;
-- 테이블
CREATE TABLE TASK(
    TNO NUMBER PRIMARY KEY,
    TLEVEL NUMBER NOT NULL,
    TMNO NUMBER NOT NULL,
    TENDDATE DATE NOT NULL,
    TTPRIORITY NUMBER NOT NULL,
    TBNO NUMBER NOT NULL,
    FOREIGN KEY (TLEVEL) REFERENCES TASK_LEVEL(TLLEVEL) ON DELETE CASCADE,
    FOREIGN KEY (TMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (TTPRIORITY) REFERENCES TASK_PRIORITY(TPPRIORITY) ON DELETE CASCADE,
    FOREIGN KEY (TBNO) REFERENCES BOARD(BNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "TASK"."TNO" IS '업무 번호';
COMMENT ON COLUMN "TASK"."TLEVEL" IS '업무 단계';
COMMENT ON COLUMN "TASK"."TMNO" IS '업무 담당자';
COMMENT ON COLUMN "TASK"."TENDDATE" IS '업무 종료일';
COMMENT ON COLUMN "TASK"."TTPRIORITY" IS '업무 우선순위 번호';
COMMENT ON COLUMN "TASK"."TBNO" IS '업무 게시글 번호';
-- 수정
ALTER TABLE TASK ADD(TTITLE VARCHAR(50)); -- 업무명
COMMENT ON COLUMN TASK.TTITLE IS '업무명';
ALTER TABLE TASK ADD(TCONTENT VARCHAR(500)); -- 업무내용
COMMENT ON COLUMN TASK.TCONTENT IS '업무내용';
ALTER TABLE TASK ADD(TSTARTDATE DATE); -- 시작일
COMMENT ON COLUMN TASK.TSTARTDATE IS '업무 시작일';
ALTER TABLE TASK ADD(TWRITER VARCHAR(100)); -- 작성자
COMMENT ON COLUMN TASK.TWRITER IS '작성자';
ALTER TABLE TASK DROP COLUMN TBNO CASCADE CONSTRAINTS;
ALTER TABLE TASK ADD(TPNO NUMBER); -- 프로젝트 참조
COMMENT ON COLUMN TASK.TPNO IS '업무 프로젝트 번호';
ALTER TABLE TASK ADD FOREIGN KEY(TPNO) REFERENCES PROJECT(PNO);
ALTER TABLE TASK ADD(TWRITEDATE DATE DEFAULT SYSDATE); -- 작성일
COMMENT ON COLUMN "TASK"."TWRITEDATE" IS '업무 작성일';

-- 15. 파일 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_FNO;
-- 테이블
CREATE TABLE TASK_FILE(
    FNO NUMBER PRIMARY KEY,
    FOLDNAME VARCHAR2(1000) NOT NULL,
    FNEWNAME VARCHAR2(1000) NOT NULL,
    FPATH VARCHAR2(1000) NOT NULL,
    FTNO NUMBER NOT NULL,
    FOREIGN KEY (FTNO) REFERENCES TASK(TNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "TASK_FILE"."FNO" IS '파일 번호';
COMMENT ON COLUMN "TASK_FILE"."FOLDNAME" IS '파일 원본 파일명';
COMMENT ON COLUMN "TASK_FILE"."FNEWNAME" IS '파일 새로운 파일명';
COMMENT ON COLUMN "TASK_FILE"."FPATH" IS '파일 경로';
COMMENT ON COLUMN "TASK_FILE"."FTNO" IS '파일 업무 번호';

-- 16. 일정 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_CNO;
-- 테이블
CREATE TABLE CALENDAR(
    CNO NUMBER PRIMARY KEY,
    CSTARTDATE DATE NOT NULL,
    CENDDATE DATE NOT NULL,
    CCONTENT VARCHAR2(300),
    CADDRESS VARCHAR2(300),
    CBNO NUMBER NOT NULL,
    FOREIGN KEY (CBNO) REFERENCES BOARD(BNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "CALENDAR"."CNO" IS '일정 번호';
COMMENT ON COLUMN "CALENDAR"."CSTARTDATE" IS '일정 시작일';
COMMENT ON COLUMN "CALENDAR"."CENDDATE" IS '일정 종료일';
COMMENT ON COLUMN "CALENDAR"."CCONTENT" IS '일정 내용';
COMMENT ON COLUMN "CALENDAR"."CADDRESS" IS '일정 주소';
COMMENT ON COLUMN "CALENDAR"."CBNO" IS '일정 게시글 번호';

-- 17. 일정 담아두기 테이블
-- 테이블
CREATE TABLE CALENDAR_KEEP(
    CKMNO NUMBER NOT NULL,
    CKCNO NUMBER NOT NULL,
    PRIMARY KEY (CKMNO, CKCNO),
    FOREIGN KEY (CKMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (CKCNO) REFERENCES CALENDAR(CNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "CALENDAR_KEEP"."CKMNO" IS '일정 담아두기 회원 번호';
COMMENT ON COLUMN "CALENDAR_KEEP"."CKCNO" IS '일정 담아두기 일정 번호';

-- 18. 요일/시간 테이블
-- 테이블
CREATE TABLE DAY_TIME(
    DTNO NUMBER PRIMARY KEY,
    DTCONTENT VARCHAR2(10) NOT NULL
);
-- 코맨트
COMMENT ON COLUMN "DAY_TIME"."DTNO" IS '요일/시간 번호';
COMMENT ON COLUMN "DAY_TIME"."DTCONTENT" IS '요일/시간 내용';
-- 날짜/요일 테이블 데이터 입력
INSERT INTO DAY_TIME VALUES ('1', '월09시');
INSERT INTO DAY_TIME VALUES ('2', '월10시');
INSERT INTO DAY_TIME VALUES ('3', '월11시');
INSERT INTO DAY_TIME VALUES ('4', '월12시');
INSERT INTO DAY_TIME VALUES ('5', '월13시');
INSERT INTO DAY_TIME VALUES ('6', '월14시');
INSERT INTO DAY_TIME VALUES ('7', '월15시');
INSERT INTO DAY_TIME VALUES ('8', '월16시');
INSERT INTO DAY_TIME VALUES ('9', '월17시');
INSERT INTO DAY_TIME VALUES ('10', '월18시');
INSERT INTO DAY_TIME VALUES ('11', '월19시');
INSERT INTO DAY_TIME VALUES ('12', '월20시');
INSERT INTO DAY_TIME VALUES ('13', '월21시');
INSERT INTO DAY_TIME VALUES ('14', '월22시');
INSERT INTO DAY_TIME VALUES ('15', '월23시');
INSERT INTO DAY_TIME VALUES ('16', '화09시');
INSERT INTO DAY_TIME VALUES ('17', '화10시');
INSERT INTO DAY_TIME VALUES ('18', '화11시');
INSERT INTO DAY_TIME VALUES ('19', '화12시');
INSERT INTO DAY_TIME VALUES ('20', '화13시');
INSERT INTO DAY_TIME VALUES ('21', '화14시');
INSERT INTO DAY_TIME VALUES ('22', '화15시');
INSERT INTO DAY_TIME VALUES ('23', '화16시');
INSERT INTO DAY_TIME VALUES ('24', '화17시');
INSERT INTO DAY_TIME VALUES ('25', '화18시');
INSERT INTO DAY_TIME VALUES ('26', '화19시');
INSERT INTO DAY_TIME VALUES ('27', '화20시');
INSERT INTO DAY_TIME VALUES ('28', '화21시');
INSERT INTO DAY_TIME VALUES ('29', '화22시');
INSERT INTO DAY_TIME VALUES ('30', '화23시');
INSERT INTO DAY_TIME VALUES ('31', '수09시');
INSERT INTO DAY_TIME VALUES ('32', '수10시');
INSERT INTO DAY_TIME VALUES ('33', '수11시');
INSERT INTO DAY_TIME VALUES ('34', '수12시');
INSERT INTO DAY_TIME VALUES ('35', '수13시');
INSERT INTO DAY_TIME VALUES ('36', '수14시');
INSERT INTO DAY_TIME VALUES ('37', '수15시');
INSERT INTO DAY_TIME VALUES ('38', '수16시');
INSERT INTO DAY_TIME VALUES ('39', '수17시');
INSERT INTO DAY_TIME VALUES ('40', '수18시');
INSERT INTO DAY_TIME VALUES ('41', '수19시');
INSERT INTO DAY_TIME VALUES ('42', '수20시');
INSERT INTO DAY_TIME VALUES ('43', '수21시');
INSERT INTO DAY_TIME VALUES ('44', '수22시');
INSERT INTO DAY_TIME VALUES ('45', '수23시');
INSERT INTO DAY_TIME VALUES ('46', '목09시');
INSERT INTO DAY_TIME VALUES ('47', '목10시');
INSERT INTO DAY_TIME VALUES ('48', '목11시');
INSERT INTO DAY_TIME VALUES ('49', '목12시');
INSERT INTO DAY_TIME VALUES ('50', '목13시');
INSERT INTO DAY_TIME VALUES ('51', '목14시');
INSERT INTO DAY_TIME VALUES ('52', '목15시');
INSERT INTO DAY_TIME VALUES ('53', '목16시');
INSERT INTO DAY_TIME VALUES ('54', '목17시');
INSERT INTO DAY_TIME VALUES ('55', '목18시');
INSERT INTO DAY_TIME VALUES ('56', '목19시');
INSERT INTO DAY_TIME VALUES ('57', '목20시');
INSERT INTO DAY_TIME VALUES ('58', '목21시');
INSERT INTO DAY_TIME VALUES ('59', '목22시');
INSERT INTO DAY_TIME VALUES ('60', '목23시');
INSERT INTO DAY_TIME VALUES ('61', '금09시');
INSERT INTO DAY_TIME VALUES ('62', '금10시');
INSERT INTO DAY_TIME VALUES ('63', '금11시');
INSERT INTO DAY_TIME VALUES ('64', '금12시');
INSERT INTO DAY_TIME VALUES ('65', '금13시');
INSERT INTO DAY_TIME VALUES ('66', '금14시');
INSERT INTO DAY_TIME VALUES ('67', '금15시');
INSERT INTO DAY_TIME VALUES ('68', '금16시');
INSERT INTO DAY_TIME VALUES ('69', '금17시');
INSERT INTO DAY_TIME VALUES ('70', '금18시');
INSERT INTO DAY_TIME VALUES ('71', '금19시');
INSERT INTO DAY_TIME VALUES ('72', '금20시');
INSERT INTO DAY_TIME VALUES ('73', '금21시');
INSERT INTO DAY_TIME VALUES ('74', '금22시');
INSERT INTO DAY_TIME VALUES ('75', '금23시');
INSERT INTO DAY_TIME VALUES ('76', '토09시');
INSERT INTO DAY_TIME VALUES ('77', '토10시');
INSERT INTO DAY_TIME VALUES ('78', '토11시');
INSERT INTO DAY_TIME VALUES ('79', '토12시');
INSERT INTO DAY_TIME VALUES ('80', '토13시');
INSERT INTO DAY_TIME VALUES ('81', '토14시');
INSERT INTO DAY_TIME VALUES ('82', '토15시');
INSERT INTO DAY_TIME VALUES ('83', '토16시');
INSERT INTO DAY_TIME VALUES ('84', '토17시');
INSERT INTO DAY_TIME VALUES ('85', '토18시');
INSERT INTO DAY_TIME VALUES ('86', '토19시');
INSERT INTO DAY_TIME VALUES ('87', '토20시');
INSERT INTO DAY_TIME VALUES ('88', '토21시');
INSERT INTO DAY_TIME VALUES ('89', '토22시');
INSERT INTO DAY_TIME VALUES ('90', '토23시');
INSERT INTO DAY_TIME VALUES ('91', '일09시');
INSERT INTO DAY_TIME VALUES ('92', '일10시');
INSERT INTO DAY_TIME VALUES ('93', '일11시');
INSERT INTO DAY_TIME VALUES ('94', '일12시');
INSERT INTO DAY_TIME VALUES ('95', '일13시');
INSERT INTO DAY_TIME VALUES ('96', '일14시');
INSERT INTO DAY_TIME VALUES ('97', '일15시');
INSERT INTO DAY_TIME VALUES ('98', '일16시');
INSERT INTO DAY_TIME VALUES ('99', '일17시');
INSERT INTO DAY_TIME VALUES ('100', '일18시');
INSERT INTO DAY_TIME VALUES ('101', '일19시');
INSERT INTO DAY_TIME VALUES ('102', '일20시');
INSERT INTO DAY_TIME VALUES ('103', '일21시');
INSERT INTO DAY_TIME VALUES ('104', '일22시');
INSERT INTO DAY_TIME VALUES ('105', '일23시');

-- 19. 프로젝트/회원(1:N채팅방) 참조 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_PMNO;
-- 테이블
CREATE TABLE PROJECT_MEMBER(
    PMPNO NUMBER NOT NULL,
    PMMNO NUMBER NOT NULL,
    PMTYPE VARCHAR2(1) DEFAULT 'Y' CHECK(PMTYPE IN ('Y', 'N')),
    FOREIGN KEY (PMPNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE,
    FOREIGN KEY (PMMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "PROJECT_MEMBER"."PMPNO" IS '프로젝트 번호';
COMMENT ON COLUMN "PROJECT_MEMBER"."PMMNO" IS '회원 번호';
COMMENT ON COLUMN "PROJECT_MEMBER"."PMTYPE" IS '프로젝트/회원 팀장 여부';

-- 20. 1:N채팅 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_CPMNO;
-- 테이블
CREATE TABLE CHAT_PTM(
    CHNO NUMBER PRIMARY KEY,
    CHCONTENT VARCHAR2(1000) NOT NULL,
    CHDATE DATE DEFAULT SYSDATE,
    CHCONDITION VARCHAR2(1) DEFAULT 'Y' CHECK (CHCONDITION IN('Y', 'N')),
    CHWRITER NUMBER,
    CHREADERS VARCHAR2(1000),
    CHPNO NUMBER,
    FOREIGN KEY (CHWRITER) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (CHPNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "CHAT_PTM"."CHNO" IS '1:N채팅 번호';
COMMENT ON COLUMN "CHAT_PTM"."CHCONTENT" IS '1:N채팅 내용';
COMMENT ON COLUMN "CHAT_PTM"."CHDATE" IS '1:N채팅 작성일';
COMMENT ON COLUMN "CHAT_PTM"."CHCONDITION" IS '1:N채팅 상태';
COMMENT ON COLUMN "CHAT_PTM"."CHWRITER" IS '1:N채팅 송신자';
COMMENT ON COLUMN "CHAT_PTM"."CHPNO" IS '1:N채팅 프로젝트 번호';
COMMENT ON COLUMN "CHAT_PTM"."CHREADERS" IS '1:N채팅 읽은 회원';

-- 21. 스케줄 매칭 상태 테이블
-- 테이블
CREATE TABLE SCHEDULE_STATUS(
	SSNO NUMBER PRIMARY KEY,
	SSNAME VARCHAR2(10) 
);
-- 코멘트
COMMENT ON COLUMN "SCHEDULE_STATUS"."SSNO" IS '매칭 상태 번호';
COMMENT ON COLUMN "SCHEDULE_STATUS"."SSNAME" IS '매칭 상태 명';
-- 데이터 입력
INSERT INTO SCHEDULE_STATUS VALUES(1, '진행');
INSERT INTO SCHEDULE_STATUS VALUES(2, '종료');

-- 22. 스케줄매칭요청 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_SMNO;
-- 테이블
CREATE TABLE SCHEDULE_MATCHING(
    SMNO NUMBER PRIMARY KEY,
    SMCONTENT VARCHAR2(300) NOT NULL,
    SMREQDATE DATE DEFAULT SYSDATE,
    SMDATE DATE NOT NULL,
    SMENDDATE DATE NOT NULL,
    SSNO NUMBER DEFAULT 1, 
    FOREIGN KEY (SSNO) REFERENCES SCHEDULE_STATUS(SSNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "SCHEDULE_MATCHING"."SMNO" IS '스케줄매칭요청 번호';
COMMENT ON COLUMN "SCHEDULE_MATCHING"."SMCONTENT" IS '스케줄매칭요청 제목(내용)';
COMMENT ON COLUMN "SCHEDULE_MATCHING"."SMDATE" IS '스케줄매칭요청 요청일';
COMMENT ON COLUMN "SCHEDULE_MATCHING"."SMENDDATE" IS '스케줄매칭요청 종료일';
COMMENT ON COLUMN "SCHEDULE_MATCHING"."SSNO" IS '스케줄매칭상태 번호';

-- 23. 회원매칭 테이블
-- 테이블
CREATE TABLE MEMBER_MATCHING(
    MMMNO NUMBER NOT NULL,
    MMDTNO NUMBER NOT NULL,
    MMSMNO NUMBER NOT NULL,
    FOREIGN KEY (MMMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (MMDTNO) REFERENCES DAY_TIME(DTNO) ON DELETE CASCADE,
    FOREIGN KEY (MMSMNO) REFERENCES SCHEDULE_MATCHING(SMNO) ON DELETE CASCADE,
    UNIQUE (MMMNO, MMDTNO, MMSMNO)
);
-- 코맨트
COMMENT ON COLUMN "MEMBER_MATCHING"."MMMNO" IS '회원매칭 회원 번호';
COMMENT ON COLUMN "MEMBER_MATCHING"."MMDTNO" IS '회원매칭 요일/시간 번호';
COMMENT ON COLUMN "MEMBER_MATCHING"."MMSMNO" IS '회원매칭 요청 번호';

-- 24. 스케줄참여 테이블
-- 테이블
CREATE TABLE SCHEDULE_JOIN(
    SJMNO NUMBER NOT NULL,
    SJSM NUMBER NOT NULL,
    FOREIGN KEY (SJMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (SJSM) REFERENCES SCHEDULE_MATCHING(SMNO) ON DELETE CASCADE,
    UNIQUE(SJMNO, SJSM)
);
-- 코맨트
COMMENT ON COLUMN "SCHEDULE_JOIN"."SJMNO" IS '스케줄참여 회원 번호';
COMMENT ON COLUMN "SCHEDULE_JOIN"."SJSM" IS '스케줄참여 요청 번호';

-- 25. 알림 타입 참조 테이블
-- 테이블
CREATE TABLE ALARM_TYPE(
    ATNO NUMBER PRIMARY KEY,
    ATNAME VARCHAR2(30) NOT NULL
);
--코맨트
COMMENT ON COLUMN "ALARM_TYPE"."ATNO" IS '알림 타입 번호';
COMMENT ON COLUMN "ALARM_TYPE"."ATNAME" IS '알림 타입 내용';
-- 데이터 입력
INSERT INTO ALARM_TYPE VALUES(1, '회원 가입');
INSERT INTO ALARM_TYPE VALUES(2, '프로젝트 초대');
INSERT INTO ALARM_TYPE VALUES(3, '프로젝트 나가기');
INSERT INTO ALARM_TYPE VALUES(4, '프로젝트 추방');
INSERT INTO ALARM_TYPE VALUES(5, '담당자 지명');
INSERT INTO ALARM_TYPE VALUES(6, '스케줄 매칭 요청');
INSERT INTO ALARM_TYPE VALUES(7, '스케줄 매칭 종료');

-- 26. 알림 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_ANO;
-- 테이블
CREATE TABLE ALARM(
    ANO NUMBER PRIMARY KEY,
    ACONTENT VARCHAR2(300) NOT NULL,
    ACONDITION VARCHAR2(1) DEFAULT 'Y' CHECK (ACONDITION IN ('Y', 'N')),
    ATYPE NUMBER CHECK (ATYPE IN (1,2,3,4,5,6,7)),
    AMNO NUMBER NOT NULL,
    APNO NUMBER,
    ATNO NUMBER,
    ASMNO NUMBER,
    APMNO NUMBER,
    FOREIGN KEY (AMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE,
    FOREIGN KEY (ATYPE) REFERENCES ALARM_TYPE(ATNO) ON DELETE CASCADE,
    FOREIGN KEY (APNO) REFERENCES PROJECT(PNO) ON DELETE CASCADE,
    FOREIGN KEY (ATNO) REFERENCES TASK(TNO) ON DELETE CASCADE,
    FOREIGN KEY (ASMNO) REFERENCES SCHEDULE_MATCHING(SMNO) ON DELETE CASCADE,
    FOREIGN KEY (APMNO) REFERENCES MEMBER(MNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "ALARM"."ANO" IS '알림 번호';
COMMENT ON COLUMN "ALARM"."ACONTENT" IS '알림 내용';
COMMENT ON COLUMN "ALARM"."ACONDITION" IS '알림 상태';
COMMENT ON COLUMN "ALARM"."ATYPE" IS '알림 타입';
COMMENT ON COLUMN "ALARM"."AMNO" IS '알림 회원 번호';
COMMENT ON COLUMN "ALARM"."APNO" IS '알림 프로젝트 번호';
COMMENT ON COLUMN "ALARM"."ATNO" IS '알림 업무 번호';
COMMENT ON COLUMN "ALARM"."ASMNO" IS '알림 스케줄 매칭 번호';
COMMENT ON COLUMN "ALARM"."APMNO" IS '알림 프로젝트 회원 번호';

-- 27. 업무 댓글 테이블
-- 시퀀스
CREATE SEQUENCE SEQ_CONO;
-- 테이블
CREATE TABLE TASK_COMMENT(
CNO NUMBER PRIMARY KEY,
CWRITER NUMBER NOT NULL,
CCONTENT VARCHAR2(2000) NOT NULL,
CWRITEDATE DATE DEFAULT SYSDATE,
CTNO NUMBER NOT NULL,
FOREIGN KEY (CTNO) REFERENCES TASK(TNO) ON DELETE CASCADE,
FOREIGN KEY (CWRITER) REFERENCES MEMBER(MNO) ON DELETE CASCADE
);
-- 코맨트
COMMENT ON COLUMN "TASK_COMMENT"."CNO" IS '댓글 번호';
COMMENT ON COLUMN "TASK_COMMENT"."CWRITER" IS '댓글 작성자';
COMMENT ON COLUMN "TASK_COMMENT"."CCONTENT" IS '댓글 내용';
COMMENT ON COLUMN "TASK_COMMENT"."CWRITEDATE" IS '작성일';
COMMENT ON COLUMN "TASK_COMMENT"."CTNO" IS '댓글이 참조하는 업무번호';

------------------------------------------------------------------------------
-- 트리거 및 프로시저
-- 1. 프로젝트 참여 트리거
CREATE OR REPLACE TRIGGER INSERT_PROJECT_MEMBER
AFTER INSERT
    ON PROJECT_MEMBER FOR EACH ROW
BEGIN
    INSERT INTO ALARM VALUES(SEQ_ANO.NEXTVAL, '프로젝트에 초대되었습니다.', DEFAULT, 2, :NEW.PMMNO, :NEW.PMPNO, NULL, NULL, NULL);
    INSERT INTO MEMO VALUES(:new.PMPNO, :new.PMMNO, '');
END;
/

-- 2. 회원가입 트리거
CREATE OR REPLACE TRIGGER INSERT_MEMBER
AFTER INSERT
    ON MEMBER FOR EACH ROW
BEGIN
    INSERT INTO ALARM VALUES
    (SEQ_ANO.NEXTVAL, '회원 가입을 축하합니다.', DEFAULT, 1, :new.MNO, NULL, NULL, NULL, NULL);
    INSERT INTO PROJECT VALUES
    (SEQ_PNO.NEXTVAL, '테스트 프로젝트', '테스트 프로젝트입니다.', 0, DEFAULT, :new.MNO);
    INSERT INTO TASK VALUES 
    (SEQ_TNO.NEXTVAL, 1, :new.MNO, SYSDATE+7, 1,
		'DO!PROJECT 가입을 축하드립니다.', 'DOPE와 함께 효율적인 프로젝트를 완성해보세요!', SYSDATE, :new.MNO, 1, SYSDATE);
END;
/

-- 3. 스케줄 요청 트리거
CREATE OR REPLACE TRIGGER INSERT_SCHEDULE_MATCHING
AFTER INSERT
    ON SCHEDULE_JOIN FOR EACH ROW
BEGIN
    INSERT INTO ALARM VALUES(SEQ_ANO.NEXTVAL, '스케줄 매칭이 요청되었습니다.', DEFAULT, 6, :new.SJMNO, NULL, NULL, :new.SJSM, NULL);
END;
/

-- 4. 스케줄 종료 트리거
CREATE OR REPLACE TRIGGER UPDATE_SCHEDULE_MATCHING
AFTER UPDATE
    ON SCHEDULE_MATCHING FOR EACH ROW
BEGIN
    IF (:NEW.SSNO = 2) THEN
    FOR DATA_ROW IN (SELECT SJMNO FROM SCHEDULE_JOIN WHERE SJSM = :OLD.SMNO) LOOP
    INSERT INTO ALARM VALUES(SEQ_ANO.NEXTVAL, '스케줄 매칭이 종료되었습니다.', DEFAULT, 7, DATA_ROW.SJMNO, NULL, NULL, :new.SMNO, NULL);
    END LOOP;
    END IF;
END;
/

-- 5. 담당자 지정 트리거
CREATE OR REPLACE TRIGGER INSERT_TASK
AFTER INSERT
    ON TASK FOR EACH ROW
BEGIN
    INSERT INTO ALARM VALUES(SEQ_ANO.NEXTVAL, '글에서 담당자로 지명되었습니다.', DEFAULT, 5, :new.TMNO, :new.TPNO, :new.TNO, NULL, NULL);
END;
/
  
-- 6. 아이디 중복체크 프로시저
CREATE OR REPLACE PROCEDURE ID_DUP_CHK
( V_ID IN MEMBER.USERID%TYPE,
  PR_RESULT OUT NUMBER)
  IS
  BEGIN
     SELECT COUNT(*) INTO PR_RESULT
     FROM MEMBER
     WHERE USERID = V_ID;
  END;
  /

-- 7. 이메일 중복체크 프로시저
CREATE OR REPLACE PROCEDURE EMAIL_DUP_CHK
( V_EMAIL IN MEMBER.EMAIL%TYPE,
  PR_RESULT OUT NUMBER)
  IS
  BEGIN
     SELECT COUNT(*) INTO PR_RESULT
     FROM MEMBER
     WHERE EMAIL = V_EMAIL;
  END;
  /

-- 8. 스케줄 업데이트 프로시저
-- SEMDATE > SYSDATE -> SSNO : 2
CREATE OR REPLACE PROCEDURE P_SSNO_2
IS
BEGIN
    UPDATE SCHEDULE_MATCHING
    SET SSNO = 2
    WHERE TO_CHAR(SMDATE-1) = TRUNC(SYSDATE);
END;
/

-- 9. 스케줄 업데이트 잡스케줄러
DECLARE 
    S2 NUMBER;
BEGIN
    SYS.DBMS_JOB.SUBMIT(
    job => S2
    ,what => 'P_SSNO_2;'
    ,next_date => to_date('28-12-2018 00:00:00','dd/mm/yyyy hh24:mi:ss')
    ,interval => 'TRUNC(SYSDATE+1)'
    ,no_parse => FALSE);
    
    SYS.DBMS_OUTPUT.PUT_LINE('Job Number is : ' || to_char(S2));
END;
/

-- 10. 프로젝트 생성시 프로젝트 회원 참여 테이블, 메모 테이블 트리거
CREATE OR REPLACE TRIGGER ADD_MEMBER_TG
AFTER INSERT ON PROJECT
FOR EACH ROW
    DECLARE PNO NUMBER;
    BEGIN
    INSERT INTO PROJECT_MEMBER VALUES
		(:new.PNO, :new.PMNO, 'Y');
    INSERT INTO MEMO VALUES
		(:new.PNO, :new.PMNO, '');
END;
/
-- 11. 프로젝트 삭제시 메모 테이블 트리거
CREATE OR REPLACE TRIGGER DEL_MEMBER_TG
BEFORE DELETE
    ON PROJECT FOR EACH ROW
BEGIN
    DELETE FROM MEMO WHERE MMPNO = :OLD.PNO;
END;
/
COMMIT;