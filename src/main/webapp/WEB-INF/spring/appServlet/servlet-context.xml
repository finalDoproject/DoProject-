<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- viewResolver : 특정 객체나 경로를 서버가 제공하는 환경에 맞게 변환해 주는 클래스 -->
	<!-- JSON 데이터를 전송할 때 사용할 viewResolver 등록하기 -->
	<!-- 요청한 viewName과 실제 사용하는 Bean 객체를 연결해주는 BeanNameViewResolver와 
	      JSON 데이터를 전달하기 위한 JsonView 작성하기 -->
	<beans:bean id="viewResolver" class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="1"/>
	</beans:bean>
		
	<beans:bean id="jsonView" class="net.sf.json.spring.web.servlet.view.JsonView"/>
	
	 <!-- @ResponseBody 어노테이션을 제공하여 자바 객체를 자동으로 JSON 타입으로 변환 해주는 viewResolver 객체 -->
	<beans:bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
	
	<beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<beans:property name="messageConverters">
			<beans:list>
				<beans:ref bean="jacksonMessageConverter"/>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- interceptor 태그를 사용해 dispatcherServlet 
	동작 시 엮여서 동작하도록 작성한 클래스를 등록 -->
	
	<interceptors>
		<interceptor>
			<!-- 모든 url 경로에 대해 동작시키겠다 -->
			<mapping path="/**"/>
			<beans:bean id="loggerInterceptor" class="com.kh.dp.common.interceptor.LoggerInterceptor"/>
		</interceptor>
		<interceptor>
			<mapping path="/member/memberView.do"></mapping>
			<!-- 특정 url 경로를 등록하여 제외시키기 -->
			<exclude-mapping path="/join.do"/>
			<beans:bean id="loginCheckInterceptor"
						class="com.kh.dp.common.interceptor.LogincheckInterceptor"/>
		</interceptor>
	</interceptors>
	
	<context:component-scan base-package="com.kh.dp" />
	
</beans:beans>
