<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="project">
	<resultMap type="map" id="project"/>
	
	<resultMap type="map" id="pjMemberList">
		<id  property="pno"  column="PNO"/>
		<result property="pmmno" column="PMMNO" />		
	</resultMap>
	
	<select id="selectProjectList"  parameterType="_int" resultType="project">
		<!-- SELECT * FROM PROJECT ORDER BY PNO DESC -->
		SELECT DISTINCT P.*, PM.PMPNO, MNOCNT, M.NICKNAME
		FROM (SELECT PMPNO,COUNT(DISTINCT PMMNO) MNOCNT
		        FROM PROJECT_MEMBER
		        GROUP BY PMPNO) PMM
		JOIN PROJECT P ON (PNO = PMPNO)
		JOIN MEMBER M ON (P.PMNO = M.MNO)
		JOIN PROJECT_MEMBER PM ON (PM.PMPNO = PMM.PMPNO)
		WHERE PNO IN (SELECT PMPNO FROM PROJECT_MEMBER WHERE PMMNO =#{mno}) 
		AND PM.PMPNO = P.PNO
		ORDER BY pno DESC
	</select>
	
	<select id="selectOneProjectLv"  parameterType="_int" resultType="project">
		<!-- SELECT * FROM PROJECT ORDER BY PNO DESC -->
		SELECT * FROM PROJECT_LEVEL WHERE LPNO = #{pno}+1
	</select>
	
	<select id="selectOneProject" parameterType="_int" resultType="project">
		SELECT * FROM PROJECT WHERE PNO = #{pno}
	</select>
	
	<insert id="insertProject">
		 INSERT INTO PROJECT VALUES
		(SEQ_PNO.NEXTVAL, #{ptitle}, #{psummary}, #{plevel}, DEFAULT, #{pmmno})
	</insert>
	<update id="updateLevelCk">
		UPDATE PROJECT SET PLEVELCK = #{plevelck} WHERE PNO = #{pno}
	</update>
	
	<update id="updateOneLevelCk">
			UPDATE PROJECT_LEVEL SET LCHECK = 'Y'
		  	WHERE LPNO = #{lpno}+1 AND LNO = #{lno}
	</update>
	
	<insert id="insertProjectLv" parameterType="java.util.List">
	INSERT ALL
		<if test="list != null">
			<foreach collection="list" item="item">		 
			 INTO PROJECT_LEVEL VALUES
			(SEQ_PNO.NEXTVAL, #{item.lno}, #{item.lname}, DEFAULT)	
			</foreach>
		</if>
	SELECT * FROM DUAL
	</insert>
		
	
		
	<select id="selectProjectIntoMember" resultType="member">
		SELECT * FROM MEMBER WHERE MNO IN (
    		SELECT PMMNO FROM PROJECT_MEMBER WHERE PMPNO = #{pno})
	</select>
	
	<delete id="deleteLeaveProject">
		DELETE FROM PROJECT_MEMBER WHERE PMPNO = #{pno} AND PMMNO = #{mno}
	</delete>
	
	<select id="selectAlarmList" resultType="alarm">
		SELECT * FROM ALARM WHERE AMNO = #{mno} AND ACONDITION = 'Y'
	</select>

	<delete id="deleteProject">
		DELETE FROM PROJECT WHERE PNO = #{pno}
	</delete>

	<select id="selectSearchMember" resultType="member">
		SELECT M.*, P.RENAMEDFILENAME FROM MEMBER M
		JOIN PROFILE_IMG P ON (M.MPROFILE = P.IMGNO)
		WHERE NICKNAME LIKE '%' || #{userNick} || '%'
	</select>
	
	<insert id="insertInviteProject">
		 INSERT INTO PROJECT_MEMBER VALUES(#{pno},#{mno}, 'N')
	</insert>
	
	<select id="searchMemberList" resultType="member">
		SELECT M.*, P.RENAMEDFILENAME FROM MEMBER M
		JOIN PROFILE_IMG P ON (M.MPROFILE = P.IMGNO)
		WHERE MNO IN (SELECT PMMNO FROM PROJECT_MEMBER WHERE PMPNO = #{pno})
	</select>
	
	<select id="selectSearchPM" parameterType="_int" resultType="ProjectMember">
		SELECT * FROM PROJECT_MEMBER WHERE PMPNO = #{pno} AND PMMNO = #{mno}
	</select>
	
	<insert id="insertExileAlarm">
		 INSERT INTO ALARM VALUES(SEQ_ANO.NEXTVAL, '프로젝트에서 추방당했습니다.', DEFAULT, 4, #{mno}, #{pno}, NULL, NULL, NULL)
	</insert>
	
	<insert id="insertLeaveAlarm">
		 INSERT INTO ALARM VALUES(SEQ_ANO.NEXTVAL, '프로젝트에서 나갔습니다.', DEFAULT, 3, #{mno}, #{pno}, NULL, NULL, #{apmno})
	</insert>

	<select id="projectMemberList" parameterType="_int" resultMap="pjMemberList">
		SELECT PNO, PMMNO
		FROM PROJECT 
		JOIN PROJECT_MEMBER ON (PNO = PMPNO)
		WHERE PMMNO=#{mno}
	</select>
	
	<select id="memberProfileList" resultType="member">
		SELECT PNO, MNO, MPROFILE, RENAMEDFILENAME
		FROM  PROJECT
		JOIN PROJECT_MEMBER ON (PNO = PMPNO)
		JOIN MEMBER ON (MNO=PMMNO)
		JOIN PROFILE_IMG ON (MPROFILE=IMGNO)
	</select>
		
		

    
	<select id="selectTaskLevelCount" resultType="TaskCount">
		SELECT (SELECT COUNT(*) FROM TASK WHERE TLEVEL = 1 AND TPNO = #{pno}) ONE,
		(SELECT COUNT(*) FROM TASK WHERE TLEVEL = 2 AND TPNO = #{pno}) TWO,
		(SELECT COUNT(*) FROM TASK WHERE TLEVEL = 3 AND TPNO = #{pno}) THREE,
		(SELECT COUNT(*) FROM TASK WHERE TLEVEL = 4 AND TPNO = #{pno}) FOUR,
		(SELECT COUNT(*) FROM TASK WHERE TLEVEL = 5 AND TPNO = #{pno}) FIVE FROM DUAL
	</select>

</mapper>
